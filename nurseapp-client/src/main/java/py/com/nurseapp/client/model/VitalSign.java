/*
 * Nurse App api documentation
 * Nurse app api with all services provided.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: marcos.echague@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package py.com.nurseapp.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * VitalSign
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-13T05:51:56.690-03:00")
public class VitalSign {
  @SerializedName("code")
  private String code = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("highLevelDescription")
  private String highLevelDescription = null;

  @SerializedName("idVitalSign")
  private Integer idVitalSign = null;

  @SerializedName("lowLevelDescription")
  private String lowLevelDescription = null;

  @SerializedName("maxAge")
  private Integer maxAge = null;

  @SerializedName("maxRange")
  private Integer maxRange = null;

  @SerializedName("minAge")
  private Integer minAge = null;

  @SerializedName("minRange")
  private Integer minRange = null;

  @SerializedName("normalLevelDescription")
  private String normalLevelDescription = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("ACTIVE"),
    
    INAVTIVE("INAVTIVE");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  public VitalSign code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @ApiModelProperty(value = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public VitalSign description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public VitalSign highLevelDescription(String highLevelDescription) {
    this.highLevelDescription = highLevelDescription;
    return this;
  }

   /**
   * Get highLevelDescription
   * @return highLevelDescription
  **/
  @ApiModelProperty(value = "")
  public String getHighLevelDescription() {
    return highLevelDescription;
  }

  public void setHighLevelDescription(String highLevelDescription) {
    this.highLevelDescription = highLevelDescription;
  }

  public VitalSign idVitalSign(Integer idVitalSign) {
    this.idVitalSign = idVitalSign;
    return this;
  }

   /**
   * Get idVitalSign
   * @return idVitalSign
  **/
  @ApiModelProperty(value = "")
  public Integer getIdVitalSign() {
    return idVitalSign;
  }

  public void setIdVitalSign(Integer idVitalSign) {
    this.idVitalSign = idVitalSign;
  }

  public VitalSign lowLevelDescription(String lowLevelDescription) {
    this.lowLevelDescription = lowLevelDescription;
    return this;
  }

   /**
   * Get lowLevelDescription
   * @return lowLevelDescription
  **/
  @ApiModelProperty(value = "")
  public String getLowLevelDescription() {
    return lowLevelDescription;
  }

  public void setLowLevelDescription(String lowLevelDescription) {
    this.lowLevelDescription = lowLevelDescription;
  }

  public VitalSign maxAge(Integer maxAge) {
    this.maxAge = maxAge;
    return this;
  }

   /**
   * Get maxAge
   * @return maxAge
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxAge() {
    return maxAge;
  }

  public void setMaxAge(Integer maxAge) {
    this.maxAge = maxAge;
  }

  public VitalSign maxRange(Integer maxRange) {
    this.maxRange = maxRange;
    return this;
  }

   /**
   * Get maxRange
   * @return maxRange
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxRange() {
    return maxRange;
  }

  public void setMaxRange(Integer maxRange) {
    this.maxRange = maxRange;
  }

  public VitalSign minAge(Integer minAge) {
    this.minAge = minAge;
    return this;
  }

   /**
   * Get minAge
   * @return minAge
  **/
  @ApiModelProperty(value = "")
  public Integer getMinAge() {
    return minAge;
  }

  public void setMinAge(Integer minAge) {
    this.minAge = minAge;
  }

  public VitalSign minRange(Integer minRange) {
    this.minRange = minRange;
    return this;
  }

   /**
   * Get minRange
   * @return minRange
  **/
  @ApiModelProperty(value = "")
  public Integer getMinRange() {
    return minRange;
  }

  public void setMinRange(Integer minRange) {
    this.minRange = minRange;
  }

  public VitalSign normalLevelDescription(String normalLevelDescription) {
    this.normalLevelDescription = normalLevelDescription;
    return this;
  }

   /**
   * Get normalLevelDescription
   * @return normalLevelDescription
  **/
  @ApiModelProperty(value = "")
  public String getNormalLevelDescription() {
    return normalLevelDescription;
  }

  public void setNormalLevelDescription(String normalLevelDescription) {
    this.normalLevelDescription = normalLevelDescription;
  }

  public VitalSign status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VitalSign vitalSign = (VitalSign) o;
    return Objects.equals(this.code, vitalSign.code) &&
        Objects.equals(this.description, vitalSign.description) &&
        Objects.equals(this.highLevelDescription, vitalSign.highLevelDescription) &&
        Objects.equals(this.idVitalSign, vitalSign.idVitalSign) &&
        Objects.equals(this.lowLevelDescription, vitalSign.lowLevelDescription) &&
        Objects.equals(this.maxAge, vitalSign.maxAge) &&
        Objects.equals(this.maxRange, vitalSign.maxRange) &&
        Objects.equals(this.minAge, vitalSign.minAge) &&
        Objects.equals(this.minRange, vitalSign.minRange) &&
        Objects.equals(this.normalLevelDescription, vitalSign.normalLevelDescription) &&
        Objects.equals(this.status, vitalSign.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, description, highLevelDescription, idVitalSign, lowLevelDescription, maxAge, maxRange, minAge, minRange, normalLevelDescription, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VitalSign {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    highLevelDescription: ").append(toIndentedString(highLevelDescription)).append("\n");
    sb.append("    idVitalSign: ").append(toIndentedString(idVitalSign)).append("\n");
    sb.append("    lowLevelDescription: ").append(toIndentedString(lowLevelDescription)).append("\n");
    sb.append("    maxAge: ").append(toIndentedString(maxAge)).append("\n");
    sb.append("    maxRange: ").append(toIndentedString(maxRange)).append("\n");
    sb.append("    minAge: ").append(toIndentedString(minAge)).append("\n");
    sb.append("    minRange: ").append(toIndentedString(minRange)).append("\n");
    sb.append("    normalLevelDescription: ").append(toIndentedString(normalLevelDescription)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

